{"version":3,"file":"webgpu-memory.js","sources":["../../src/capabilities-info.js","../../src/webgpu-memory.js"],"sourcesContent":["/* eslint-disable no-sparse-arrays */\n\n/*\nThis file was copied and modified from the WebGPU Conformance Test Suite\nhttps://github.com/gpuweb/cts/blob/main/src/webgpu/capability_info.ts\n\nCopyright 2019 WebGPU CTS Contributors\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n   1. Redistributions of source code must retain the above copyright notice,\n      this list of conditions and the following disclaimer.\n\n   2. Redistributions in binary form must reproduce the above copyright notice,\n      this list of conditions and the following disclaimer in the documentation\n      and/or other materials provided with the distribution.\n\n   3. Neither the name of the copyright holder nor the names of its\n      contributors may be used to endorse or promote products derived from this\n      software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\nFOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\nDAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\nSERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\nCAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\nOR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\nfunction makeTable(members, defaults, table) {\n  const result = {};\n  for (const [k, v] of Object.entries(table)) {\n    const item = {};\n    for (let i = 0; i < members.length; ++i) {\n      item[members[i]] = v[i] ?? defaults[i];\n    }\n    result[k] = item;\n  }\n  return result;\n}\n\nfunction keysOf(o) {\n  return [...Object.keys(o)];\n}\n\nconst kRegularTextureFormatInfo = /* prettier-ignore */ makeTable(\n                           ['renderable', 'multisample', 'resolve', 'color', 'depth', 'stencil', 'storage', 'copySrc', 'copyDst',         'sampleType', 'bytesPerBlock', 'blockWidth', 'blockHeight', 'renderTargetPixelByteCost', 'renderTargetComponentAlignment',                  'feature',       'baseFormat'],\n                           [            ,              ,          ,    true,   false,     false,          ,      true,      true,                     ,                ,            1,             1,                   undefined,                        undefined,                           ,          undefined], {\n  // 8-bit formats\n  'r8unorm':               [        true,          true,      true,        ,        ,          ,     false,          ,          ,              'float',               1,             ,              ,                           1,                                1],\n  'r8snorm':               [       false,         false,     false,        ,        ,          ,     false,          ,          ,              'float',               1],\n  'r8uint':                [        true,          true,     false,        ,        ,          ,     false,          ,          ,               'uint',               1,             ,              ,                           1,                                1],\n  'r8sint':                [        true,          true,     false,        ,        ,          ,     false,          ,          ,               'sint',               1,             ,              ,                           1,                                1],\n  // 16-bit formats\n  'r16uint':               [        true,          true,     false,        ,        ,          ,     false,          ,          ,               'uint',               2,             ,              ,                           2,                                2],\n  'r16sint':               [        true,          true,     false,        ,        ,          ,     false,          ,          ,               'sint',               2,             ,              ,                           2,                                2],\n  'r16float':              [        true,          true,      true,        ,        ,          ,     false,          ,          ,              'float',               2,             ,              ,                           2,                                2],\n  'rg8unorm':              [        true,          true,      true,        ,        ,          ,     false,          ,          ,              'float',               2,             ,              ,                           2,                                1],\n  'rg8snorm':              [       false,         false,     false,        ,        ,          ,     false,          ,          ,              'float',               2],\n  'rg8uint':               [        true,          true,     false,        ,        ,          ,     false,          ,          ,               'uint',               2,             ,              ,                           2,                                1],\n  'rg8sint':               [        true,          true,     false,        ,        ,          ,     false,          ,          ,               'sint',               2,             ,              ,                           2,                                1],\n  // 32-bit formats\n  'r32uint':               [        true,         false,     false,        ,        ,          ,      true,          ,          ,               'uint',               4,             ,              ,                           4,                                4],\n  'r32sint':               [        true,         false,     false,        ,        ,          ,      true,          ,          ,               'sint',               4,             ,              ,                           4,                                4],\n  'r32float':              [        true,          true,     false,        ,        ,          ,      true,          ,          , 'unfilterable-float',               4,             ,              ,                           4,                                4],\n  'rg16uint':              [        true,          true,     false,        ,        ,          ,     false,          ,          ,               'uint',               4,             ,              ,                           4,                                2],\n  'rg16sint':              [        true,          true,     false,        ,        ,          ,     false,          ,          ,               'sint',               4,             ,              ,                           4,                                2],\n  'rg16float':             [        true,          true,      true,        ,        ,          ,     false,          ,          ,              'float',               4,             ,              ,                           4,                                2],\n  'rgba8unorm':            [        true,          true,      true,        ,        ,          ,      true,          ,          ,              'float',               4,             ,              ,                           8,                                1,                           ,       'rgba8unorm'],\n  'rgba8unorm-srgb':       [        true,          true,      true,        ,        ,          ,     false,          ,          ,              'float',               4,             ,              ,                           8,                                1,                           ,       'rgba8unorm'],\n  'rgba8snorm':            [       false,         false,     false,        ,        ,          ,      true,          ,          ,              'float',               4],\n  'rgba8uint':             [        true,          true,     false,        ,        ,          ,      true,          ,          ,               'uint',               4,             ,              ,                           4,                                1],\n  'rgba8sint':             [        true,          true,     false,        ,        ,          ,      true,          ,          ,               'sint',               4,             ,              ,                           4,                                1],\n  'bgra8unorm':            [        true,          true,      true,        ,        ,          ,     false,          ,          ,              'float',               4,             ,              ,                           8,                                1,                           ,       'bgra8unorm'],\n  'bgra8unorm-srgb':       [        true,          true,      true,        ,        ,          ,     false,          ,          ,              'float',               4,             ,              ,                           8,                                1,                           ,       'bgra8unorm'],\n  // Packed 32-bit formats\n  'rgb10a2unorm':          [        true,          true,      true,        ,        ,          ,     false,          ,          ,              'float',               4,             ,              ,                           8,                                4],\n  'rg11b10ufloat':         [       false,         false,     false,        ,        ,          ,     false,          ,          ,              'float',               4,             ,              ,                           8,                                4],\n  'rgb9e5ufloat':          [       false,         false,     false,        ,        ,          ,     false,          ,          ,              'float',               4],\n  // 64-bit formats\n  'rg32uint':              [        true,         false,     false,        ,        ,          ,      true,          ,          ,               'uint',               8,             ,              ,                           8,                                4],\n  'rg32sint':              [        true,         false,     false,        ,        ,          ,      true,          ,          ,               'sint',               8,             ,              ,                           8,                                4],\n  'rg32float':             [        true,         false,     false,        ,        ,          ,      true,          ,          , 'unfilterable-float',               8,             ,              ,                           8,                                4],\n  'rgba16uint':            [        true,          true,     false,        ,        ,          ,      true,          ,          ,               'uint',               8,             ,              ,                           8,                                2],\n  'rgba16sint':            [        true,          true,     false,        ,        ,          ,      true,          ,          ,               'sint',               8,             ,              ,                           8,                                2],\n  'rgba16float':           [        true,          true,      true,        ,        ,          ,      true,          ,          ,              'float',               8,             ,              ,                           8,                                2],\n  // 128-bit formats\n  'rgba32uint':            [        true,         false,     false,        ,        ,          ,      true,          ,          ,               'uint',              16,             ,              ,                          16,                                4],\n  'rgba32sint':            [        true,         false,     false,        ,        ,          ,      true,          ,          ,               'sint',              16,             ,              ,                          16,                                4],\n  'rgba32float':           [        true,         false,     false,        ,        ,          ,      true,          ,          , 'unfilterable-float',              16,             ,              ,                          16,                                4],\n});\n/* prettier-ignore */\nconst kTexFmtInfoHeader =  ['renderable', 'multisample', 'resolve', 'color', 'depth', 'stencil', 'storage', 'copySrc', 'copyDst',         'sampleType', 'bytesPerBlock', 'blockWidth', 'blockHeight', 'renderTargetPixelByteCost', 'renderTargetComponentAlignment',                  'feature',       'baseFormat'];\nconst kSizedDepthStencilFormatInfo = /* prettier-ignore */ makeTable(kTexFmtInfoHeader,\n                           [        true,          true,     false,   false,        ,          ,     false,          ,          ,                     ,                ,            1,             1,                   undefined,                        undefined,                           ,          undefined], {\n  'depth32float':          [            ,              ,          ,        ,    true,     false,          ,      true,     false,              'depth',               4],\n  'depth16unorm':          [            ,              ,          ,        ,    true,     false,          ,      true,      true,              'depth',               2],\n  'stencil8':              [            ,              ,          ,        ,   false,      true,          ,      true,      true,               'uint',               1],\n});\n\n// Multi aspect sample type are now set to their first aspect\n// NOTE: We're making a best guess here. These sizes are undefined but it's better to guess something reasonable than zero\nconst kUnsizedDepthStencilFormatInfo = /* prettier-ignore */ makeTable(kTexFmtInfoHeader,\n                           [        true,          true,     false,   false,        ,          ,     false,     false,     false,                     ,               4,            1,             1,                            ,                                 ,                           ,          undefined], {\n  'depth24plus':           [            ,              ,          ,        ,    true,     false,          ,          ,          ,              'depth'],\n  'depth24plus-stencil8':  [            ,              ,          ,        ,    true,      true,          ,          ,          ,              'depth'],\n  // MAINTENANCE_TODO: These should really be sized formats; see below MAINTENANCE_TODO about multi-aspect formats.\n  'depth32float-stencil8': [            ,              ,          ,        ,    true,      true,          ,          ,          ,              'depth',               5,             ,              ,                            ,                                 ,    'depth32float-stencil8'],\n});\n\n// Separated compressed formats by type\nconst kBCTextureFormatInfo = /* prettier-ignore */ makeTable(kTexFmtInfoHeader,\n                           [       false,         false,     false,    true,   false,     false,     false,      true,      true,                     ,                ,            4,             4,                            ,                                 ,                           ,          undefined], {\n  // Block Compression (BC) formats\n  'bc1-rgba-unorm':        [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',               8,            4,             4,                            ,                                 ,   'texture-compression-bc',   'bc1-rgba-unorm'],\n  'bc1-rgba-unorm-srgb':   [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',               8,            4,             4,                            ,                                 ,   'texture-compression-bc',   'bc1-rgba-unorm'],\n  'bc2-rgba-unorm':        [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 ,   'texture-compression-bc',   'bc2-rgba-unorm'],\n  'bc2-rgba-unorm-srgb':   [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 ,   'texture-compression-bc',   'bc2-rgba-unorm'],\n  'bc3-rgba-unorm':        [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 ,   'texture-compression-bc',   'bc3-rgba-unorm'],\n  'bc3-rgba-unorm-srgb':   [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 ,   'texture-compression-bc',   'bc3-rgba-unorm'],\n  'bc4-r-unorm':           [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',               8,            4,             4,                            ,                                 ,   'texture-compression-bc'],\n  'bc4-r-snorm':           [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',               8,            4,             4,                            ,                                 ,   'texture-compression-bc'],\n  'bc5-rg-unorm':          [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 ,   'texture-compression-bc'],\n  'bc5-rg-snorm':          [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 ,   'texture-compression-bc'],\n  'bc6h-rgb-ufloat':       [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 ,   'texture-compression-bc'],\n  'bc6h-rgb-float':        [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 ,   'texture-compression-bc'],\n  'bc7-rgba-unorm':        [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 ,   'texture-compression-bc',   'bc7-rgba-unorm'],\n  'bc7-rgba-unorm-srgb':   [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 ,   'texture-compression-bc',   'bc7-rgba-unorm'],\n});\nconst kETC2TextureFormatInfo = /* prettier-ignore */ makeTable(kTexFmtInfoHeader,\n                           [       false,         false,     false,    true,   false,     false,     false,      true,      true,                     ,                ,            4,             4,                            ,                                 ,                           ,          undefined], {\n  // Ericsson Compression (ETC2) formats\n  'etc2-rgb8unorm':        [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',               8,            4,             4,                            ,                                 , 'texture-compression-etc2',   'etc2-rgb8unorm'],\n  'etc2-rgb8unorm-srgb':   [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',               8,            4,             4,                            ,                                 , 'texture-compression-etc2',   'etc2-rgb8unorm'],\n  'etc2-rgb8a1unorm':      [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',               8,            4,             4,                            ,                                 , 'texture-compression-etc2', 'etc2-rgb8a1unorm'],\n  'etc2-rgb8a1unorm-srgb': [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',               8,            4,             4,                            ,                                 , 'texture-compression-etc2', 'etc2-rgb8a1unorm'],\n  'etc2-rgba8unorm':       [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 , 'texture-compression-etc2',  'etc2-rgba8unorm'],\n  'etc2-rgba8unorm-srgb':  [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 , 'texture-compression-etc2',  'etc2-rgba8unorm'],\n  'eac-r11unorm':          [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',               8,            4,             4,                            ,                                 , 'texture-compression-etc2'],\n  'eac-r11snorm':          [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',               8,            4,             4,                            ,                                 , 'texture-compression-etc2'],\n  'eac-rg11unorm':         [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 , 'texture-compression-etc2'],\n  'eac-rg11snorm':         [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 , 'texture-compression-etc2'],\n});\nconst kASTCTextureFormatInfo = /* prettier-ignore */ makeTable(kTexFmtInfoHeader,\n                           [       false,         false,     false,    true,   false,     false,     false,      true,      true,                     ,                ,             ,              ,                            ,                                 ,                           ,          undefined], {\n  // Adaptable Scalable Compression (ASTC) formats\n  'astc-4x4-unorm':        [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 , 'texture-compression-astc',   'astc-4x4-unorm'],\n  'astc-4x4-unorm-srgb':   [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            4,             4,                            ,                                 , 'texture-compression-astc',   'astc-4x4-unorm'],\n  'astc-5x4-unorm':        [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            5,             4,                            ,                                 , 'texture-compression-astc',   'astc-5x4-unorm'],\n  'astc-5x4-unorm-srgb':   [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            5,             4,                            ,                                 , 'texture-compression-astc',   'astc-5x4-unorm'],\n  'astc-5x5-unorm':        [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            5,             5,                            ,                                 , 'texture-compression-astc',   'astc-5x5-unorm'],\n  'astc-5x5-unorm-srgb':   [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            5,             5,                            ,                                 , 'texture-compression-astc',   'astc-5x5-unorm'],\n  'astc-6x5-unorm':        [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            6,             5,                            ,                                 , 'texture-compression-astc',   'astc-6x5-unorm'],\n  'astc-6x5-unorm-srgb':   [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            6,             5,                            ,                                 , 'texture-compression-astc',   'astc-6x5-unorm'],\n  'astc-6x6-unorm':        [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            6,             6,                            ,                                 , 'texture-compression-astc',   'astc-6x6-unorm'],\n  'astc-6x6-unorm-srgb':   [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            6,             6,                            ,                                 , 'texture-compression-astc',   'astc-6x6-unorm'],\n  'astc-8x5-unorm':        [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            8,             5,                            ,                                 , 'texture-compression-astc',   'astc-8x5-unorm'],\n  'astc-8x5-unorm-srgb':   [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            8,             5,                            ,                                 , 'texture-compression-astc',   'astc-8x5-unorm'],\n  'astc-8x6-unorm':        [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            8,             6,                            ,                                 , 'texture-compression-astc',   'astc-8x6-unorm'],\n  'astc-8x6-unorm-srgb':   [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            8,             6,                            ,                                 , 'texture-compression-astc',   'astc-8x6-unorm'],\n  'astc-8x8-unorm':        [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            8,             8,                            ,                                 , 'texture-compression-astc',   'astc-8x8-unorm'],\n  'astc-8x8-unorm-srgb':   [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,            8,             8,                            ,                                 , 'texture-compression-astc',   'astc-8x8-unorm'],\n  'astc-10x5-unorm':       [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,           10,             5,                            ,                                 , 'texture-compression-astc',  'astc-10x5-unorm'],\n  'astc-10x5-unorm-srgb':  [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,           10,             5,                            ,                                 , 'texture-compression-astc',  'astc-10x5-unorm'],\n  'astc-10x6-unorm':       [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,           10,             6,                            ,                                 , 'texture-compression-astc',  'astc-10x6-unorm'],\n  'astc-10x6-unorm-srgb':  [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,           10,             6,                            ,                                 , 'texture-compression-astc',  'astc-10x6-unorm'],\n  'astc-10x8-unorm':       [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,           10,             8,                            ,                                 , 'texture-compression-astc',  'astc-10x8-unorm'],\n  'astc-10x8-unorm-srgb':  [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,           10,             8,                            ,                                 , 'texture-compression-astc',  'astc-10x8-unorm'],\n  'astc-10x10-unorm':      [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,           10,            10,                            ,                                 , 'texture-compression-astc', 'astc-10x10-unorm'],\n  'astc-10x10-unorm-srgb': [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,           10,            10,                            ,                                 , 'texture-compression-astc', 'astc-10x10-unorm'],\n  'astc-12x10-unorm':      [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,           12,            10,                            ,                                 , 'texture-compression-astc', 'astc-12x10-unorm'],\n  'astc-12x10-unorm-srgb': [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,           12,            10,                            ,                                 , 'texture-compression-astc', 'astc-12x10-unorm'],\n  'astc-12x12-unorm':      [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,           12,            12,                            ,                                 , 'texture-compression-astc', 'astc-12x12-unorm'],\n  'astc-12x12-unorm-srgb': [            ,              ,          ,        ,        ,          ,          ,          ,          ,              'float',              16,           12,            12,                            ,                                 , 'texture-compression-astc', 'astc-12x12-unorm'],\n});\n\n// Definitions for use locally. To access the table entries, use `kTextureFormatInfo`.\n\n// MAINTENANCE_TODO: Consider generating the exports below programmatically by filtering the big list, instead\n// of using these local constants? Requires some type magic though.\n/* prettier-ignore */ const   kCompressedTextureFormatInfo = { ...kBCTextureFormatInfo, ...kETC2TextureFormatInfo, ...kASTCTextureFormatInfo };\n/* prettier-ignore */ const        kColorTextureFormatInfo = { ...kRegularTextureFormatInfo, ...kCompressedTextureFormatInfo };\n/* prettier-ignore */ const    kEncodableTextureFormatInfo = { ...kRegularTextureFormatInfo, ...kSizedDepthStencilFormatInfo };\n/* prettier-ignore */ const        kSizedTextureFormatInfo = { ...kRegularTextureFormatInfo, ...kSizedDepthStencilFormatInfo, ...kCompressedTextureFormatInfo };\n/* prettier-ignore */ const        kDepthStencilFormatInfo = { ...kSizedDepthStencilFormatInfo, ...kUnsizedDepthStencilFormatInfo };\n/* prettier-ignore */ const kUncompressedTextureFormatInfo = { ...kRegularTextureFormatInfo, ...kSizedDepthStencilFormatInfo, ...kUnsizedDepthStencilFormatInfo };\n/* prettier-ignore */ const          kAllTextureFormatInfo = { ...kUncompressedTextureFormatInfo, ...kCompressedTextureFormatInfo };\n\n/* prettier-ignore */ export const      kRegularTextureFormats = keysOf(     kRegularTextureFormatInfo);\n/* prettier-ignore */ export const   kSizedDepthStencilFormats = keysOf(  kSizedDepthStencilFormatInfo);\n/* prettier-ignore */ export const kUnsizedDepthStencilFormats = keysOf(kUnsizedDepthStencilFormatInfo);\n/* prettier-ignore */ export const   kCompressedTextureFormats = keysOf(  kCompressedTextureFormatInfo);\n\n/* prettier-ignore */ export const        kColorTextureFormats = keysOf(       kColorTextureFormatInfo);\n/* prettier-ignore */ export const    kEncodableTextureFormats = keysOf(   kEncodableTextureFormatInfo);\n/* prettier-ignore */ export const        kSizedTextureFormats = keysOf(       kSizedTextureFormatInfo);\n/* prettier-ignore */ export const        kDepthStencilFormats = keysOf(       kDepthStencilFormatInfo);\n/* prettier-ignore */ export const kUncompressedTextureFormats = keysOf(kUncompressedTextureFormatInfo);\n/* prettier-ignore */ export const          kAllTextureFormats = keysOf(         kAllTextureFormatInfo);\n\n// CompressedTextureFormat are unrenderable so filter from RegularTextureFormats for color targets is enough\nexport const kRenderableColorTextureFormats = kRegularTextureFormats.filter(\n  v => kColorTextureFormatInfo[v].renderable\n);\n\n// The formats of GPUTextureFormat for canvas context.\nexport const kCanvasTextureFormats = ['bgra8unorm', 'rgba8unorm', 'rgba16float'];\n\nexport const kTextureFormatInfo = kAllTextureFormatInfo;","import { kTextureFormatInfo } from './capabilities-info.js';\n\n/**\n * \n * @callback ComputeMemSizeFn\n * @param {any} arg\n * @returns {number} The size in bytes\n */\n\nconst webgpuMemoryIdSymbol = Symbol('webgpu-memory-object-id');\nconst deviceIdToDeviceWeakRef = new Map();\n\n/**\n * @typedef {Object} ObjectInfo\n * @property {WeakRef} ref to object\n * @property {number} id object's id (same as key)\n * @property {number} deviceId object's device\n * @property {string} category\n * @property {number|ComputeMemSizeFn} [size]\n */\n\nlet nextId = 1;\n/** @type {Map<number, ObjectInfo>} */\nconst allWebGPUObjectsById = new Map();\n\n/**\n * Start tracking a resource by device\n * @param {GPUDevice} device\n * @param {GPUObjectBase} webgpuObject\n * @param {string} category\n * @param {number|ComputeMemSizeFn} [size]\n */\nfunction addDeviceObject(device, webgpuObject, category, size) {\n  let id = webgpuObject[webgpuMemoryIdSymbol];\n  if (!id) {\n    id = nextId++;\n    webgpuObject[webgpuMemoryIdSymbol] = id;\n  }\n  allWebGPUObjectsById.set(id, {\n    ref: new WeakRef(webgpuObject),\n    id,\n    deviceId: device[webgpuMemoryIdSymbol],\n    category,\n    size,\n  });\n}\n\n/**\n * Start tracking a resource by device\n * @param {GPUDevice} device\n * @param {GPUTexture | GPUBuffer} webgpuObject\n * @param {string} category\n * @property {number|ComputeMemSizeFn} size\n */\nfunction addDeviceMem(device, webgpuObject, category, size) {\n  addDeviceObject(device, webgpuObject, category, size);\n}\n\n/**\n * @param {number} deviceId\n * @returns true if device still exists\n */\nfunction deviceExists(deviceId) {\n  const ref = deviceIdToDeviceWeakRef.get(deviceId);\n  return ref && !!ref.deref();\n}\n\n/**\n * Free an object's memory\n * @param {number} id\n */\nfunction freeObjectById(id) {\n  allWebGPUObjectsById.delete(id);\n}\n\n/**\n * Free the memory used by object.\n * @param {GPUTexture | GPUBuffer} webgpuObject\n * @param {string} category\n */\nfunction freeObject(webgpuObject, category) {\n  const id = webgpuObject[webgpuMemoryIdSymbol];\n  freeObjectById(id, category);\n}\n\n/**\n * @typedef {Object} WebGPUMemoryInfo\n * @property {Object.<string, number>} memory\n * @property {Object.<string, number>} resources\n */\n\n/**\n * Gets WebGPU memory usage. If no device is passed in returns info for all devices.\n *\n * @param {GPUDevice} [device] optional device.\n * @returns {WebGPUMemoryInfo}\n */\nexport function getWebGPUMemoryUsage(device) {\n  const memory = {\n    total: 0,\n    buffer: 0,\n    texture: 0,\n    querySet: 0,\n    canvas: 0,\n  };\n  const resources = {\n    buffer: 0,\n    texture: 0,\n    querySet: 0,\n  };\n  const info = { memory, resources };\n\n  const requestedDeviceId = device && device[webgpuMemoryIdSymbol];\n\n  const idsToDelete = [];\n  for (const [id, {ref, deviceId, category, size}] of allWebGPUObjectsById.entries()) {\n    const webgpuObject = ref.deref();\n    if (!webgpuObject || !deviceExists(deviceId)) {\n      idsToDelete.push(id);\n    } else {\n      if (!requestedDeviceId || deviceId === requestedDeviceId) {\n        resources[category] = (resources[category] || 0) + 1;\n        if (size) {\n          const numBytes = typeof size === 'function' ? size(webgpuObject) : size;\n          memory.total += numBytes;\n          memory[category] += numBytes;\n        }\n      }\n    }\n  }\n\n  idsToDelete.forEach(freeObjectById);\n\n  return info;\n}\n\n/**\n *\n * @param {GPUTexture} texture\n * @returns {number} approximate number of bytes used by texture.\n */\nfunction computeTextureMemorySize(texture) {\n  const {\n    blockWidth,\n    blockHeight,\n    bytesPerBlock,\n  } = kTextureFormatInfo[texture.format];\n\n  let size = 0;\n  let width = texture.width;\n  let height = texture.height;\n  let depth = texture.depthOrArrayLayers;\n\n  for (let level = 0; level < texture.mipLevelCount; ++level) {\n    const blocksAcross = Math.ceil(width * texture.sampleCount / blockWidth);\n    const blocksDown = Math.ceil(height * texture.sampleCount / blockHeight);\n    const numBlocks = blocksAcross * blocksDown * depth;\n    const bytesUsed = numBlocks * bytesPerBlock;\n    size += bytesUsed;\n    width = Math.max(1, width / 2 | 0);\n    height = Math.max(1, height / 2 | 0);\n    depth = texture.dimension === '3d' ? Math.max(1, depth / 2 | 0) : depth;\n  }\n\n  return size;\n}\n\n/**\n * @param {object} object with method to wrap\n * @param {string} name Name of method to wrap\n * @param {} fn\n */\nfunction wrapFunction(object, name, fn) {\n  const origFn = object.prototype[name];\n  object.prototype[name] = function(...args) {\n    const result = origFn.call(this, ...args);\n    if (result !== undefined && typeof result.then === 'function') {\n      result.then(realResult => fn(this, realResult, ...args));\n    } else {\n      fn(this, result, ...args);\n    }\n    return result;\n  };\n}\n\n/**\n *\n * @param {GPUDevice} device\n * @param {GPUBuffer} buffer\n */\nfunction addBuffer(device, buffer) {\n  const bytesUsed = buffer.size;\n  addDeviceMem(device, buffer, 'buffer', bytesUsed);\n}\n\n/**\n *\n * @param {GPUBuffer} buffer\n */\nfunction removeBuffer(buffer) {\n  freeObject(buffer, 'buffer');\n}\n\n/**\n *\n * @param {GPUDevice} device\n * @param {GPUTexture} texture\n */\nfunction addTexture(device, texture) {\n  const bytesUsed = computeTextureMemorySize(texture);\n  addDeviceMem(device, texture, 'texture', bytesUsed);\n}\n\n/**\n *\n * @param {GPUTexture} texture\n */\nfunction removeTexture(texture) {\n  freeObject(texture, 'texture');\n}\n\n/**\n * @param {GPUDevice} device\n * @param {GPUQuerySet} querySet\n */\nfunction addQuerySet(device, querySet) {\n  const bytesUsed = querySet.count * 8;\n  addDeviceMem(device, querySet, 'querySet', bytesUsed);\n}\n\n/**\n * @param {GPUQuerySet} querySet\n */\nfunction removeQuerySet(querySet) {\n  freeObject(querySet, 'querySet');\n}\n\nfunction addDevice(adapter, device) {\n  addDeviceMem(device, device, 'device', 0);\n  const id = device[webgpuMemoryIdSymbol];\n  deviceIdToDeviceWeakRef.set(id, new WeakRef(device));\n}\n\nfunction removeDevice(device) {\n  const id = device[webgpuMemoryIdSymbol];\n  deviceIdToDeviceWeakRef.delete(id);\n  freeObject(device, 'device');\n}\n\n// assuming there are, in general, 2 textures per canvas.\n// The one being displayed and the one being rendered to\nconst kTexturesPerCanvas = 2;\n\nfunction computeCanvasBytesUsed(context, format) {\n  const {width, height} = context.canvas;\n  return computeTextureMemorySize({\n    format,\n    width,\n    height,\n    depthOrArrayLayers: 1,\n    sampleCount: 1,\n    mipLevelCount: 1,\n    dimension: '2d',\n  }) * kTexturesPerCanvas;\n}\n\nfunction addContext(context, dummy, config) {\n  freeObject(context, 'canvas');\n  const format = config.format;\n  addDeviceMem(config.device, context, 'canvas', (context) => computeCanvasBytesUsed(context, format))\n}\n\nfunction removeContext(context) {\n  freeObject(context, 'canvas');\n}\n\nfunction wrapCreationDestroy(factoryClass, objectClass, fnName, category) {\n  wrapFunction(factoryClass, fnName, function(device, object) {\n    addDeviceObject(device, object, category);\n  });\n  if (objectClass.prototype.destroy) {\n    wrapFunction(objectClass, 'destroy', function(object) {\n      freeObject(object, category);\n    });\n  }\n}\n/* TODO: remove these! */\n/* global GPUAdapter */\n/* global GPUBuffer */\n/* global GPUDevice */\n/* global GPUTexture */\n/* global GPUSampler */\n/* global GPUBindGroup */\n/* global GPUBindGroupLayout */\n/* global GPUPipelineLayout */\n/* global GPUShaderModule */\n/* global GPUComputePipeline */\n/* global GPURenderPipeline */\n/* global GPUComputePipeline */\n/* global GPURenderPipeline */\n///* global GPUCommandEncoder */\n///* global GPURenderBundleEncoder */\n/* global GPUQuerySet */\n\nif (typeof GPUAdapter !== 'undefined') {\n  wrapFunction(GPUAdapter, 'requestDevice', addDevice);\n  wrapFunction(GPUDevice, 'destroy', removeDevice);\n\n  wrapFunction(GPUCanvasContext, 'configure', addContext);\n  wrapFunction(GPUCanvasContext, 'unconfigure', removeContext);\n\n  wrapFunction(GPUDevice, 'createBuffer', addBuffer);\n  wrapFunction(GPUBuffer, 'destroy', removeBuffer);\n  wrapFunction(GPUDevice, 'createTexture', addTexture);\n  wrapFunction(GPUTexture, 'destroy', removeTexture);\n  wrapFunction(GPUDevice, 'createQuerySet', addQuerySet);\n  wrapFunction(GPUQuerySet, 'destroy', removeQuerySet);\n\n  wrapCreationDestroy(GPUDevice, GPUSampler, 'createSampler', 'sampler');\n  wrapCreationDestroy(GPUDevice, GPUBindGroup, 'createBindGroup', 'bindGroup');\n  wrapCreationDestroy(GPUDevice, GPUBindGroupLayout, 'createBindGroupLayout', 'bindGroupLayout');\n  wrapCreationDestroy(GPUDevice, GPUPipelineLayout, 'createPipelineLayout', 'pipelineLayout');\n  wrapCreationDestroy(GPUDevice, GPUShaderModule, 'createShaderModule', 'shaderModule');\n  wrapCreationDestroy(GPUDevice, GPUComputePipeline, 'createComputePipeline', 'computePipeline');\n  wrapCreationDestroy(GPUDevice, GPURenderPipeline, 'createRenderPipeline', 'renderPipeline');\n  wrapCreationDestroy(GPUDevice, GPUComputePipeline, 'createComputePipelineAsync', 'computePipeline');\n  wrapCreationDestroy(GPUDevice, GPURenderPipeline, 'createRenderPipelineAsync', 'renderPipeline');\n  //wrapCreationDestroy(GPUDevice, GPUCommandEncoder, 'createCommandEncoder', 'commandEncoder');\n  //wrapCreationDestroy(GPUDevice, GPURenderBundleEncoder, 'createRenderBundleEncoder', 'renderBundleEncoder');\n  // problem, no device for this\n  // GPURenderBundleEncoder, 'finish'\n}\n"],"names":[],"mappings":"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"}